@model sacmaumvc.Models.Product
@using GridMvc.Html;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Layout/_LayoutAdminPage.cshtml";
    var listProduct = ViewBag.ListProduct as List<sacmaumvc.Models.Product>;
}
@*<div class="container">
        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
        <div class="wrap-grid">
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ImageName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductNameEn)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CategoryID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ManufacturerID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.OriginID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CreateDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IsAvailable)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in listProduct)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ImageName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductNameEn)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CategoryID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ManufacturerID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OriginID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreateDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IsAvailable)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.ProductID }) |
                            @Html.ActionLink("Details", "Details", new { id = item.ProductID }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.ProductID })
                        </td>
                    </tr>
                }

            </table>
        </div>
    </div>*@
<div class="container">
    <div class="wrap-grid">
        <h2>Sản Phẩm</h2>
        <p style="margin: 20px 0;">
            <a href="@Url.Action("Create")"><span class="fa fa-plus"></span> Thêm mới</a>
        </p>
        @Html.Grid(listProduct).Columns(columns =>
                    {
                        columns.Add().Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(o => Html.CheckBox("checked", false));
                        columns.Add(c => c.ProductID).Titled("Product ID").Filterable(true);
                        columns.Add(c => c.ProductName).Titled("Tên sản phẩm").Filterable(true);
                        columns.Add(c => c.ProductCategory.ProductCategoryName).Titled("Danh mục").Filterable(true);
                        columns.Add(c => c.IsAvailable).Encoded(false).Sanitized(false).SetWidth(40).RenderValueAs(o => Html.CheckBox("checked", o.IsAvailable.Value)).Titled("Hiển thị").Filterable(true);
                        columns.Add(c => c.CreateDate).Format("{0:dd/MM/yyyy}").Titled("Ngày tạo").Filterable(true);
                        columns.Add(c => c.ImageName).Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(o => @<img src="@Url.Content("~/res/product/" + o.ImageName)" width="100" height="100" />).Titled("Ảnh").Filterable(true);
                        columns.Add()
                        .Encoded(false)
                        .Sanitized(false)
                        .SetWidth(30)
                        .RenderValueAs(o => Html.ActionLink("Edit", "Edit", new { id = o.ProductID }));
                        columns.Add()
                        .Encoded(false)
                        .Sanitized(false)
                        .SetWidth(30)
                        .RenderValueAs(o => Html.ActionLink("Delete", "Delete", new { id = o.ProductID }));

                    }).WithPaging(10).Sortable(true)
    </div>
</div>
<div class="container">
    @using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @*<h4>Product</h4>*@
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ProductID)

            <div class="form-group">
                @Html.Label("Ảnh đại diện", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })*@
                    <input type="file" name="fileupload" />
                    @Html.Hidden("ImageName", @Model.ImageName)
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Danh mục", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownList("CategoryID")
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MetaTittle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MetaTittle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MetaTittle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MetaDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MetaDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Tiêu đề", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Mô tả", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <textarea name="Description">@Model.Description</textarea>
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Nội dung", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <textarea name="Content">@Model.Content</textarea>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TagEn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TagEn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TagEn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MetaTittleEn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MetaTittleEn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MetaTittleEn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MetaDescriptionEn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MetaDescriptionEn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MetaDescriptionEn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Tiêu đề (En)", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductNameEn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductNameEn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Mô tả (En)", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <textarea name="DescriptionEn">@Model.DescriptionEn</textarea>
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Nội dung (En)", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <textarea name="ContentEn">@Model.ContentEn</textarea>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OtherPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OtherPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OtherPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SavePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SavePrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SavePrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ManufacturerID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ManufacturerID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ManufacturerID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OriginID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OriginID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OriginID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    @Html.Label("Còn hàng", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-1">
                        @Html.CheckBox("InStock", Model.InStock.HasValue ? Model.InStock : false)
                        @Html.ValidationMessageFor(model => model.InStock, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3">
                    @Html.Label("Hot", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-1">
                        @*@Html.EditorFor(model => model.IsHot, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*@Html.CheckBoxFor(model => model.IsHot.Value, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.CheckBox("IsHot", Model.IsHot.HasValue ? Model.IsHot : false)
                        @Html.ValidationMessageFor(model => model.IsHot, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3">
                    @Html.Label("Mới", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-1">
                        @Html.CheckBox("IsNew", Model.IsNew.HasValue ? Model.IsNew : false)
                        @Html.ValidationMessageFor(model => model.IsNew, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3">
                    @Html.Label("Bán chạy", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-1">
                        @Html.CheckBox("IsBestSeller", Model.IsBestSeller.HasValue ? Model.IsBestSeller : false)
                        @Html.ValidationMessageFor(model => model.IsBestSeller, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    @Html.Label("Giảm giá", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-1">
                        @Html.CheckBox("IsSaleOff", Model.IsSaleOff.HasValue ? Model.IsSaleOff : false)
                        @Html.ValidationMessageFor(model => model.IsSaleOff, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3">
                    @Html.Label("Xem trên trang chủ", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-1">
                        @Html.CheckBox("IsShowOnHomePage", Model.IsShowOnHomePage.HasValue ? Model.IsShowOnHomePage : false)
                        @Html.ValidationMessageFor(model => model.IsShowOnHomePage, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.Label("Hiển thị", htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-1">
                            @*@Html.EditorFor(model => model.IsAvailable, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.CheckBox("IsAvailable", Model.IsAvailable.HasValue ? Model.IsAvailable : false)
                            @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Cập nhật" class="btn btn-default" /> | @Html.ActionLink("Cancel", "Index", null, htmlAttributes: new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    }

    @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@
</div>