@model IEnumerable<sacmaumvc.Models.Product>
@using GridMvc.Html;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Layout/_LayoutAdminPage.cshtml";
}

@*<div class="container">
        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ImageName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductNameEn)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CategoryID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ManufacturerID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OriginID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreateDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsAvailable)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductNameEn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ManufacturerID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OriginID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreateDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsAvailable)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id=item.ProductID }) |
                    @Html.ActionLink("Details", "Details", new { id=item.ProductID }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.ProductID })
                </td>
            </tr>
    }

        </table>
    </div>*@
<div class="container">
    <div class="wrap-grid">
        <h2>Sản Phẩm</h2>
        <p style="margin: 20px 0 0;">
            @*@Html.ActionLink("Thêm mới", "Create")*@
            <a href="@Url.Action("Create")"><span class="fa fa-plus"></span> Thêm mới</a>
            <a style="margin-left:5px;" id="btnSuaNhanh" href="javascript:void(0)"><span class="fa fa-check"></span> Sửa nhanh</a>
            <a style="margin-left:5px;" id="btnXoa" href="javascript:void(0)"><span class="fa fa-remove"></span> Xoá</a>
        </p>
        @Html.Grid(Model).Columns(columns =>
                    {
                        columns.Add().Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(o => Html.CheckBox("chkSelect", false, new { value = o.ProductID }));
                        columns.Add(c => c.ProductID).Titled("Product ID").Filterable(true);
                        columns.Add(c => c.ProductName).Titled("Tên sản phẩm").Filterable(true);
                        columns.Add(c => c.ProductCategory.ProductCategoryName).Titled("Danh mục").Filterable(true);
                        columns.Add(c => c.IsAvailable).Encoded(false).Sanitized(false).SetWidth(40).RenderValueAs(o => Html.CheckBox("CheckIsAvailable", o.IsAvailable.Value, new { value = o.ProductID })).Titled("Hiển thị").Filterable(true);
                        columns.Add(c => c.CreateDate).Format("{0:dd/MM/yyyy}").Titled("Ngày tạo").Filterable(true);
                        columns.Add(c => c.ImageName).Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(o => @<img src="@Url.Content("~/res/product/" + o.ImageName)" width="100" height="100" />).Titled("Ảnh").Filterable(true);
                        columns.Add()
                        .Encoded(false)
                        .Sanitized(false)
                        .SetWidth(30)
                        .RenderValueAs(o => Html.ActionLink("Edit", "Edit", new { id = o.ProductID }, new { @class = "fa fa-edit" }));
                        //columns.Add()
                        //.Encoded(false)
                        //.Sanitized(false)
                        //.SetWidth(30)
                        //.RenderValueAs(o => Html.ActionLink("Delete", "Delete", new { id = o.ProductID }));

                    }).WithPaging(10).Sortable(true)
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('#btnSuaNhanh').on("click", function () {
            var arrCheckAvailabel = [];
            var arrProductID = [];
            debugger;
            $(':checkbox[name=CheckIsAvailable]').each(function (i) {
                arrProductID[i] = $(this).val();
                if ($(this).is(":checked")){
                    arrCheckAvailabel[i] = "True";
                }else{
                    arrCheckAvailabel[i] = "False";
                }
            });
            
            var postData = {
                id: arrProductID,
                arrCheckAvailabel: arrCheckAvailabel
            };
            $.ajax({
                url: '/Admin/QuickUpdate',
                type: "POST",
                data: JSON.stringify(postData),
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    $("body").append('<div class="loading"></div><div id="loading_mask"></div>');
                    $('#loading_mask').css({ opacity: 0.5 })
                            .fadeIn('medium');
                    $(".loading").css({ top: $(window).scrollTop() + ($(window).height() - $(".loading").height()) / 2, left: $(window).scrollLeft() + ($(window).width() - $(".loading").width()) / 2 })
                            .fadeIn('medium');
                    window.location.href = "/Admin";
                },
                error: function (er) {
                    return;
                }
            });
        });
        $('#btnXoa').on("click", function () {
            var con = confirm("Xoá tất cả dòng đã chọn!");
            if (con == true) {
                var arrProductID = [];
                $(':checkbox[name=chkSelect]:checked').each(function (i) {
                    arrProductID[i] = $(this).val();
                });

                var postData = {
                    id: arrProductID
                };
                $.ajax({
                    url: '/Admin/DeleteProduct',
                    type: "POST",
                    data: JSON.stringify(postData),
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        $("body").append('<div class="loading"></div><div id="loading_mask"></div>');
                        $('#loading_mask').css({ opacity: 0.5 })
                                .fadeIn('medium');
                        $(".loading").css({ top: $(window).scrollTop() + ($(window).height() - $(".loading").height()) / 2, left: $(window).scrollLeft() + ($(window).width() - $(".loading").width()) / 2 })
                                .fadeIn('medium');
                        location.reload();
                    },
                    error: function (er) {
                        return;
                    }
                });
            }
            else {
                return false;
            }
        })
    });
</script>